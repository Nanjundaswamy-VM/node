/**
 * @file
 * root file of project.
 */

'use strict';

var express = require('express');
var bodyParser = require('body-parser');
var db = require('./config/database');
var app = express();

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

var order = require('./routes/index');
app.use('/order', order);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  var err = new Error('Not Found');
  err.statusCode = 404;
  next(err);
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};
  var code = err.statusCode ? err.statusCode : 500;
  if (err) {
    res.status(code).json({
      status: "Failure",
      statusCode: code,
      message: err.message,
      data: [] });

  }
  //next();
});
module.exports = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcHAvaW5kZXguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwiZGIiLCJhcHAiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwib3JkZXIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyIiwiRXJyb3IiLCJzdGF0dXNDb2RlIiwibG9jYWxzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0IiwiY29kZSIsInN0YXR1cyIsImRhdGEiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFLQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCO0FBQ0EsSUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUExQjtBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLG1CQUFELENBQWxCO0FBQ0EsSUFBTUcsR0FBRyxHQUFHSixPQUFPLEVBQW5COztBQUVBO0FBQ0E7QUFDQUksR0FBRyxDQUFDQyxHQUFKLENBQVFILFVBQVUsQ0FBQ0ksVUFBWCxDQUFzQixFQUFFQyxRQUFRLEVBQUUsSUFBWixFQUF0QixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxVQUFVLENBQUNNLElBQVgsRUFBUjs7QUFFQSxJQUFNQyxLQUFLLEdBQUdSLE9BQU8sQ0FBQyxnQkFBRCxDQUFyQjtBQUNBRyxHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCSSxLQUFsQjs7QUFFQTtBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFVSyxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQTBCO0FBQ2hDLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxLQUFKLENBQVUsV0FBVixDQUFWO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0UsVUFBSixHQUFpQixHQUFqQjtBQUNBSCxFQUFBQSxJQUFJLENBQUNDLEdBQUQsQ0FBSjtBQUNELENBSkQ7O0FBTUE7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBVVEsR0FBVixFQUFlSCxHQUFmLEVBQW9CQyxHQUFwQixFQUF5QkMsSUFBekIsRUFBK0I7QUFDckM7QUFDQUQsRUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVdDLE9BQVgsR0FBcUJKLEdBQUcsQ0FBQ0ksT0FBekI7QUFDQU4sRUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVdFLEtBQVgsR0FBbUJSLEdBQUcsQ0FBQ04sR0FBSixDQUFRZSxHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q04sR0FBdkMsR0FBNkMsRUFBaEU7QUFDQSxNQUFJTyxJQUFJLEdBQUdQLEdBQUcsQ0FBQ0UsVUFBSixHQUFpQkYsR0FBRyxDQUFDRSxVQUFyQixHQUFrQyxHQUE3QztBQUNBLE1BQUlGLEdBQUosRUFBUztBQUNQRixJQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBV0QsSUFBWCxFQUFpQlosSUFBakIsQ0FBc0I7QUFDcEJhLE1BQUFBLE1BQU0sRUFBRSxTQURZO0FBRXBCTixNQUFBQSxVQUFVLEVBQUVLLElBRlE7QUFHcEJILE1BQUFBLE9BQU8sRUFBRUosR0FBRyxDQUFDSSxPQUhPO0FBSXBCSyxNQUFBQSxJQUFJLEVBQUUsRUFKYyxFQUF0Qjs7QUFNRDtBQUNEO0FBQ0QsQ0FkRDtBQWVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZVxyXG4gKiByb290IGZpbGUgb2YgcHJvamVjdC5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpXHJcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi9jb25maWcvZGF0YWJhc2UnKVxyXG5jb25zdCBhcHAgPSBleHByZXNzKClcclxuXHJcbi8vIGNvbmZpZ3VyZSBhcHAgdG8gdXNlIGJvZHlQYXJzZXIoKVxyXG4vLyB0aGlzIHdpbGwgbGV0IHVzIGdldCB0aGUgZGF0YSBmcm9tIGEgUE9TVFxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5jb25zdCBvcmRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4JylcclxuYXBwLnVzZSgnL29yZGVyJywgb3JkZXIpO1xyXG5cclxuLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcclxuYXBwLnVzZShmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcclxuICB2YXIgZXJyID0gbmV3IEVycm9yKCdOb3QgRm91bmQnKTtcclxuICBlcnIuc3RhdHVzQ29kZSA9IDQwNDtcclxuICBuZXh0KGVycilcclxufSk7XHJcblxyXG4vLyBlcnJvciBoYW5kbGVyXHJcbmFwcC51c2UoZnVuY3Rpb24gKGVyciwgcmVxLCByZXMsIG5leHQpIHtcclxuICAvLyBzZXQgbG9jYWxzLCBvbmx5IHByb3ZpZGluZyBlcnJvciBpbiBkZXZlbG9wbWVudFxyXG4gIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xyXG4gIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcclxuICBsZXQgY29kZSA9IGVyci5zdGF0dXNDb2RlID8gZXJyLnN0YXR1c0NvZGUgOiA1MDA7XHJcbiAgaWYgKGVycikge1xyXG4gICAgcmVzLnN0YXR1cyhjb2RlKS5qc29uKHtcclxuICAgICAgc3RhdHVzOiBcIkZhaWx1cmVcIixcclxuICAgICAgc3RhdHVzQ29kZTogY29kZSxcclxuICAgICAgbWVzc2FnZTogZXJyLm1lc3NhZ2UsXHJcbiAgICAgIGRhdGE6IFtdXHJcbiAgICB9KTtcclxuICB9XHJcbiAgLy9uZXh0KCk7XHJcbn0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDsiXX0=