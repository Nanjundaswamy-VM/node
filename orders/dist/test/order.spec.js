"use strict";var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _dotenv = _interopRequireDefault(require("dotenv"));
var _path = _interopRequireDefault(require("path"));

var _config = _interopRequireDefault(require("../app/config"));


require("../app/config/database");
var http = _interopRequireWildcard(require("http"));

require("../app/models/order");









var _app = _interopRequireDefault(require("../app"));process.env.NODE_ENV = 'test';var mongoose = require("mongoose");var Order = mongoose.model("order"); //Require the dev-dependencies
var chai = require('chai');var chaiHttp = require('chai-http');
var should = chai.should();
var expect = chai.expect;

chai.use(chaiHttp);

/*
                      * Test the /GET order route
                    */
describe('/GET /order/view/', function () {
  it('it should not get deatils of Order', function (done) {
    chai.request(_app["default"]).
    get('/order/view/5df4b97b4480fd08b800f1c9').
    end(function (err, res) {
      res.should.have.status(400);
      res.body.data.length.should.be.eq(0);
      res.body.success.should.be.eq('Failure');
      done();
    });
  });
});

/*
      * Test the /GET order route
    */
describe('/GET /order/view/', function () {
  it('it should get deatils of Order', function (done) {
    chai.request(_app["default"]).
    get('/order/view/5df5d6e3038ee61840cf1bc1').
    end(function (err, res) {
      var resLen = Object.entries(res.body.data).length;
      res.should.have.status(200);
      resLen.should.be.above(0);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});


/*
    * Test the /GET order totalAmount route
    */
describe('/GET /order/totalAmount/', function () {
  it('it should not get the Order total amount', function (done) {
    chai.request(_app["default"]).
    get('/order/totalAmount/12344').
    end(function (err, res) {
      res.should.have.status(204);
      done();
    });
  });
});

/*
    * Test the /GET order totalAmount route
    */
describe('/GET order/totalAmount/', function () {
  it('it should get the Order total amount', function (done) {
    chai.request(_app["default"]).
    get('/order/totalAmount/5df5d6e3038ee61840cf1bc1').
    end(function (err, res) {
      var resLen = Object.entries(res.body.data).length;
      res.should.have.status(200);
      resLen.should.be.above(0);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});


/*
    * Test the /POST orderlist route
    */
describe('/POST /order/orderList', function () {
  it('it should not get the Order list', function (done) {
    var data = {
      "restaurantids": ["5df513e1c3ad841080b99c21", "5df5145dc3ad841080b99c22"],
      "fromdate": "2019-12-20",
      "todate": "2019-12-21",
      "pageNo": 1 };

    chai.request(_app["default"]).
    post('/order/orderList').
    send(data).
    end(function (err, res) {
      res.should.have.status(204);
      done();
    });
  });
});

/*
    * Test the /POST orderlist route
    */
describe('/POST /order/orderList', function () {
  it('it should get the Orderlist', function (done) {
    var data = {
      "restaurantids": ["5df513e1c3ad841080b99c21", "5df5145dc3ad841080b99c22"],
      "fromdate": "2019-12-15",
      "todate": "2019-12-16",
      "pageNo": 1 };


    chai.request(_app["default"]).
    post('/order/orderList').
    send(data).
    end(function (err, res) {
      var resLen = Object.entries(res.body.data).length;
      res.should.have.status(200);
      resLen.should.be.above(0);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});


/*
    * Test the /POST orders amount route
    */
describe('/POST /order/ordersAmount', function () {
  it('it should not get the orders amount', function (done) {
    var data = {
      "restaurantids": ["5df513e1c3ad841080b99c21", "5df5145dc3ad841080b99c22"],
      "fromdate": "2019-12-20",
      "todate": "2019-12-21",
      "pageNo": 1 };

    chai.request(_app["default"]).
    post('/order/ordersAmount').
    send(data).
    end(function (err, res) {
      res.should.have.status(204);
      done();
    });
  });
});

/*
    * Test the /POST ordersAmount route
    */
describe('/POST /order/ordersAmount', function () {
  it('it should get the ordersAmount', function (done) {
    var data = {
      "restaurantids": ["5df513e1c3ad841080b99c21", "5df5145dc3ad841080b99c22"],
      "fromdate": "2019-12-15",
      "todate": "2019-12-16",
      "pageNo": 1 };


    chai.request(_app["default"]).
    post('/order/ordersAmount').
    send(data).
    end(function (err, res) {
      var resLen = Object.entries(res.body.data).length;
      res.should.have.status(200);
      resLen.should.be.above(0);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});

/*
    * Test the /POST place order route
    */
describe('/POST /order/place', function () {
  it('it should place order', function (done) {
    var data = {
      "customerid": 312,
      "delivery_address": "Delhi",
      "restaurant_id": "5df8ba38ce555e1e0c64e25c",
      "items": [
      {
        "itemname": "Kabab",
        "quantity": 2,
        "amount": 300 }] };




    chai.request(_app["default"]).
    post('/order/place').
    send(data).
    end(function (err, res) {
      var resLen = Object.entries(res.body.data).length;
      res.should.have.status(200);
      resLen.should.be.above(0);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});

/*
    * Test the /POST update order status
    */
describe('/POST order/cancel', function () {
  it('it should not update order status', function (done) {
    chai.request(_app["default"]).
    patch('/order/cancel/142443').
    end(function (err, res) {
      res.should.have.status(204);
      done();
    });
  });
});

/*
    * Test the /POST update order status
    */
describe('/POST order/cancel', function () {
  it('it should update order status', function (done) {
    chai.request(_app["default"]).
    patch('/order/cancel/5df5d6e3038ee61840cf1bc1').
    end(function (err, res) {
      res.should.have.status(200);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});


/*
    * Test the /POST update order details
    */
describe('/POST order/update', function () {
  it('it should update order details', function (done) {
    var data = {
      "customerid": 310,
      "delivery_address": "Delhi",
      "restaurant_id": "5df514d9c3ad841080b99c25",
      "items": [
      {
        "itemname": "mushroom googly",
        "quantity": 1,
        "amount": 450 },
      {
        "itemname": "Kabab",
        "quantity": 1,
        "amount": 150 }],


      "delivery_status": 1 };


    chai.request(_app["default"]).
    put('/order/update/5df8924a4740e70114fc5db2').
    send(data).
    end(function (err, res) {
      res.should.have.status(200);
      res.body.success.should.be.eq('Success');
      done();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,