/**
 * @file
 * root file of project.
 */

'use strict';

var express = require('express');
var bodyParser = require('body-parser');
var app = express();

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

var report = require('./routes/index');
app.use('/report', report);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  var err = new Error('Not Found');
  err.statusCode = 404;
  next(err);
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};
  var code = err.statusCode ? err.statusCode : 500;
  if (err) {
    res.status(code).json({
      status: "Failure",
      statusCode: code,
      message: err.message,
      data: [] });

  }
  //next();
});
module.exports = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcHAvaW5kZXguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwiYXBwIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInJlcG9ydCIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJFcnJvciIsInN0YXR1c0NvZGUiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJjb2RlIiwic3RhdHVzIiwiZGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOztBQUVBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCO0FBQ0EsSUFBTUUsR0FBRyxHQUFHSCxPQUFPLEVBQW5COztBQUVBO0FBQ0E7QUFDQUcsR0FBRyxDQUFDQyxHQUFKLENBQVFGLFVBQVUsQ0FBQ0csVUFBWCxDQUFzQixFQUFFQyxRQUFRLEVBQUUsSUFBWixFQUF0QixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRRixVQUFVLENBQUNLLElBQVgsRUFBUjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUF0QjtBQUNBRSxHQUFHLENBQUNDLEdBQUosQ0FBUSxTQUFSLEVBQW1CSSxNQUFuQjs7QUFFQTtBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFVSyxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQTBCO0FBQ2hDLE1BQUlDLEdBQUcsR0FBRyxJQUFJQyxLQUFKLENBQVUsV0FBVixDQUFWO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0UsVUFBSixHQUFpQixHQUFqQjtBQUNBSCxFQUFBQSxJQUFJLENBQUNDLEdBQUQsQ0FBSjtBQUNELENBSkQ7O0FBTUE7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBVVEsR0FBVixFQUFlSCxHQUFmLEVBQW9CQyxHQUFwQixFQUF5QkMsSUFBekIsRUFBK0I7QUFDckM7QUFDQUQsRUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVdDLE9BQVgsR0FBcUJKLEdBQUcsQ0FBQ0ksT0FBekI7QUFDQU4sRUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVdFLEtBQVgsR0FBbUJSLEdBQUcsQ0FBQ04sR0FBSixDQUFRZSxHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q04sR0FBdkMsR0FBNkMsRUFBaEU7QUFDQSxNQUFJTyxJQUFJLEdBQUdQLEdBQUcsQ0FBQ0UsVUFBSixHQUFpQkYsR0FBRyxDQUFDRSxVQUFyQixHQUFrQyxHQUE3QztBQUNBLE1BQUlGLEdBQUosRUFBUztBQUNQRixJQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBV0QsSUFBWCxFQUFpQlosSUFBakIsQ0FBc0I7QUFDcEJhLE1BQUFBLE1BQU0sRUFBRSxTQURZO0FBRXBCTixNQUFBQSxVQUFVLEVBQUVLLElBRlE7QUFHcEJILE1BQUFBLE9BQU8sRUFBRUosR0FBRyxDQUFDSSxPQUhPO0FBSXBCSyxNQUFBQSxJQUFJLEVBQUUsRUFKYyxFQUF0Qjs7QUFNRDtBQUNEO0FBQ0QsQ0FkRDtBQWVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZVxyXG4gKiByb290IGZpbGUgb2YgcHJvamVjdC5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxyXG5cclxuLy8gY29uZmlndXJlIGFwcCB0byB1c2UgYm9keVBhcnNlcigpXHJcbi8vIHRoaXMgd2lsbCBsZXQgdXMgZ2V0IHRoZSBkYXRhIGZyb20gYSBQT1NUXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmNvbnN0IHJlcG9ydCA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4JylcclxuYXBwLnVzZSgnL3JlcG9ydCcsIHJlcG9ydCk7XHJcblxyXG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxyXG5hcHAudXNlKGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xyXG4gIHZhciBlcnIgPSBuZXcgRXJyb3IoJ05vdCBGb3VuZCcpO1xyXG4gIGVyci5zdGF0dXNDb2RlID0gNDA0O1xyXG4gIG5leHQoZXJyKVxyXG59KTtcclxuXHJcbi8vIGVycm9yIGhhbmRsZXJcclxuYXBwLnVzZShmdW5jdGlvbiAoZXJyLCByZXEsIHJlcywgbmV4dCkge1xyXG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XHJcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XHJcbiAgcmVzLmxvY2Fscy5lcnJvciA9IHJlcS5hcHAuZ2V0KCdlbnYnKSA9PT0gJ2RldmVsb3BtZW50JyA/IGVyciA6IHt9O1xyXG4gIGxldCBjb2RlID0gZXJyLnN0YXR1c0NvZGUgPyBlcnIuc3RhdHVzQ29kZSA6IDUwMDtcclxuICBpZiAoZXJyKSB7XHJcbiAgICByZXMuc3RhdHVzKGNvZGUpLmpzb24oe1xyXG4gICAgICBzdGF0dXM6IFwiRmFpbHVyZVwiLFxyXG4gICAgICBzdGF0dXNDb2RlOiBjb2RlLFxyXG4gICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcclxuICAgICAgZGF0YTogW11cclxuICAgIH0pO1xyXG4gIH1cclxuICAvL25leHQoKTtcclxufSk7XHJcbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==